---

- name: Ensure Samba root
  ansible.builtin.file:
    path: /sambaroot
    state: directory
    owner: "root"
    group: "root"
    mode: 0711

- name: Ensure disk is mounted
  ansible.builtin.lineinfile:
    path: /etc/fstab
    line: '/dev/disk/by-uuid/f7c8fae9-8f96-46b3-b3e5-27395031496a /sambaroot ext4 defaults 0 1'

- name: Create users passes
  shell: 'mount -a'

- name: Ensure Samba user dirs
  loop: '{{ samba_data.shares }}'
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.main_user }}"
    group: "{{ item.main_user }}"
    mode: 0750

- name: Create groups for users
  with_items: '{{ samba_data.users }}'
  group:
    name: '{{ item.group }}'
    state: present


- name: Create users passes
  with_items: '{{ samba_data.users }}'
  register: 'passwords'
  shell: 'openssl passwd -6 -salt {{ item.salt }} {{ item.pass }}'

- name: Create users with passwords
  loop: '{{ samba_data.users }}'
  loop_control:
    index_var: idx
  user:
    name: '{{ item.name }}'
    password: '{{ passwords.results[idx].stdout }}'
    shell: /sbin/nologin
    group: '{{ item.group }}'

- name: Create samba passwords
  loop: '{{ samba_data.users }}'
  loop_control:
    index_var: idx
  shell: "printf '{{ item.pass }}\n{{ item.pass }}\n' | smbpasswd -a {{ item.name }}"


- name: Set smb conf
  template:
      src: files/smb.conf.jinja2
      dest: /etc/samba/smb.conf

- name: Restart samba service
  systemd_service:
    state: restarted
    name: smbd

- name: Install hdparm
  apt:
    pkg: 
    - hdparm
    state: present
    update_cache: true

- name: Set hdparm service
  template:
      src: files/hdparm.service
      dest: /etc/systemd/system/hdparm.service

- name: enable hdparm service
  systemd_service:
    enabled: true
    name: hdparm



- name: Install node exporter tools
  apt:
    pkg: 
    - smartmontools
    - python3-paramiko
    - git
    - cron
    - dos2unix
    state: present
    update_cache: true


- name: Keys1
  copy:
    dest: /home/{{ default_user }}/.ssh/homelab-docker.key.pub
    src: '../../../protected/keys/docker/homelab-docker.key.pub'
    mode: u=r,g=,o=

- name: Keys2
  copy:
    dest: /home/{{ default_user }}/.ssh/homelab-docker.key
    src: '../../../protected/keys/docker/homelab-docker.key'
    mode: u=r,g=,o=

- name: Add a host in the configuration
  community.general.ssh_config:
    host: "github.com"
    identity_file: "/home/{{ default_user }}/.ssh/homelab-docker.key"


- name: Ensure git ignores crlf
  command: "git config --global core.autocrlf true"

- name: Ensure Projects
  ansible.builtin.file:
    path: /home/{{ default_user }}/Projects
    state: directory
    owner: "{{ default_user }}"
    group: "{{ default_user }}"
    mode: 0700


- name: Git checkout main repo
  ansible.builtin.git:
    repo: 'git@github.com:k0eff/S.M.A.R.T-disk-monitoring-for-Prometheus.git'
    dest: /home/{{ default_user }}/Projects/smart-disk-monitoring-prometheus
    version: master
    key_file: /home/{{ default_user }}/.ssh/homelab-docker.key
    accept_newhostkey: true
    force: true
  ignore_errors: true

- name: fix line feeds
  shell: 'dos2unix /home/{{ default_user }}/Projects/smart-disk-monitoring-prometheus/smartmon.sh'

- name: Enable cron for smartmon exporter job
  ansible.builtin.cron:
    name: "run smartmon"
    minute: "*/5"
    job: "/home/{{ default_user }}/Projects/smart-disk-monitoring-prometheus/smartmon.sh > /var/lib/node_exporter/smart_metrics.prom"

